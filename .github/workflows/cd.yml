name: CD_action

on:
 push:
   branches:
     - main

jobs:
 CD_job:
   runs-on: ubuntu-latest

   env:
      GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
      GCLOUD_STORAGE_PATH_MANIFEST: ${{ secrets.GCLOUD_STORAGE_PATH_MANIFEST }}

   steps:
   - name: Checkout repository
     uses: actions/checkout@v3

   - name: Set up Python
     uses: actions/setup-python@v3
     with:
       python-version: '3.12'

   - name: Install dependencies
     run: pip install -r dbt-requirements.txt

   - name: Authenticate to Google Cloud
     uses: google-github-actions/auth@v0.4.3
     with:
       credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}

   - name: Extract project ID from service key
     id: extract_project
     run: echo "PROJECT_ID=$(echo '${{ secrets.GCLOUD_SERVICE_KEY }}' | jq -r '.project_id')" >> $GITHUB_ENV

   - name: Set up Cloud SDK
     uses: google-github-actions/setup-gcloud@v1
     with:
       project_id: ${{ env.PROJECT_ID }}

   - name: Setup dbt state directory
     run: mkdir -p ./dbt-state

   - name: Copy manifest.json from Google Cloud Storage
     run: |
       gsutil cp gs://${{ env.GCLOUD_STORAGE_PATH_MANIFEST }}/manifest.json ./dbt-state/ || echo "Manifest not found"

   - name: Run dbt debug
     run: dbt debug --target prod

   - name: Run dbt deps
     run: dbt deps --target prod

   - name: Debug state comparison
     run: |
       if [ -f "./dbt-state/manifest.json" ]; then
         echo "üîç Debugging state comparison:"
         echo "Modified models:"
         dbt ls -s 'state:modified' --defer --state ./dbt-state/ --target prod || echo "No modified models"
         echo "Modified+ (with downstream):"
         dbt ls -s 'state:modified+' --defer --state ./dbt-state/ --target prod || echo "No modified+ models"
       fi

   - name: Run dbt with state-based execution
     run: |
       if [ -f "./dbt-state/manifest.json" ]; then
         echo "üéØ Using state-based execution for production"
         # Run seeds only if source files changed or no previous state
         dbt seed -s 'state:modified' --defer --state ./dbt-state/ --target prod || dbt seed --target prod
         # Run models with state-based selection  
         dbt run -s 'state:modified+' --defer --state ./dbt-state/ --target prod
         dbt test -s 'state:modified+' --defer --state ./dbt-state/ --target prod
       else
         echo "üìã Running full execution for production (no previous state)"
         dbt seed --target prod
         dbt run --target prod
         dbt test --target prod
       fi

   - name: Validate and upload new manifest.json
     run: |
       echo "üîç Validating production manifest before upload:"
       echo "Sample model schemas in new manifest:"
       cat ./target/manifest.json | jq '.nodes | with_entries(select(.key | contains("model"))) | to_entries[0:3] | .[].value | {name: .name, schema: .schema, database: .database, relation_name: .relation_name}'
       
       echo "üì§ Uploading manifest to Google Cloud Storage:"
       gsutil cp ./target/manifest.json gs://${{ env.GCLOUD_STORAGE_PATH_MANIFEST }}/
       
       echo "‚úÖ Manifest uploaded successfully"